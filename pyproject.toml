[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "saas_foundation"
version = "0.1.0"
description = "A pure service-level library providing core multi-tenant SaaS services and a robust datastorage solution."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
keywords = ["saas", "multi-tenant", "library", "orchestration"]
authors = [
  { name = "Shawn", email = "shawn@example.com" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "bcrypt>=4.3.0",
    "pytest>=8.4.1",
    "python-dotenv>=1.1.1",
    "stripe>=12.4.0",
]

[project.urls]
"Homepage" = "https://github.com/shawn/saas_foundation"
"Bug Tracker" = "https://github.com/shawn/saas_foundation/issues"

[tool.uv]
package-dir = "src/saas_foundation"

[tool.uv.build]
package-layout = "src/saas_foundation"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pylint.'MASTER']
disable = [
    "C0330", # Wrong hanging indentation before block
    "C0301", # Line too long
    "R0903", # Too few public methods
    "R0913", # Too many arguments
    "W0613", # Unused argument
    "C0114", # Missing module docstring
    "C0115", # Missing class docstring
    "C0116"  # Missing function or method method docstring
]

[tool.pylint."src.logging_system"]
disable = [
    "C0114", # Missing module docstring
    "C0115", # Missing class docstring
    "C0116"  # Missing function or method docstring
]

[tool.pytest.ini_options]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test_"

[tool.setuptools.packages.find]
where = ['src']